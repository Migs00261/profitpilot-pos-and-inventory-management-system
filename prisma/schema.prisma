// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
enum UserRole{
  ADMIN
  USER
}

model User {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  firstname    String?
  lastname    String?
  email   String? @unique
  emailVerified DateTime?
  image   String?
  password String?
  role     UserRole @default(USER)
  accounts  Account[]
  isTwoFactorEnabled Boolean @default(false)
  twoFactorConfirmation TwoFactorConfirmation?
  
}
model Account {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  userId  String   @db.ObjectId
  type    String
  provider String
  providerAccountId String 
  refresh_token String?  @db.String
  access_token String?   @db.String
  expires_at Int?
  token_type String?
  scope  String?
  id_token String?     @db.String
  session_state String?
  user User @relation(fields:[userId],references: [id],onDelete:Cascade)

 @@unique([provider,providerAccountId])
  
}
model VerificationToken{
    id      String   @id @default(auto()) @map("_id") @db.ObjectId
    email  String
    token  String @unique
    expires DateTime

    @@unique([email,token])

}
model PasswordResetToken {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email String
  token String @unique
  expires DateTime

  @@unique([email,token])

}
model TwoFactorToken {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email String
  token String @unique
  expires DateTime

  @@unique([email,token])

}
model TwoFactorConfirmation {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String 
  user User @relation(fields: [userId],references: [id],onDelete:Cascade)
  @@unique([userId])

}
model Products {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  product String
  image String
  type String
  category String
  brand String
  salePrice String
  purchaseprice String
  stockunit String
  warehouse String
}

model Brands {
  id String   @id @default(auto()) @map("_id") @db.ObjectId
  Brand String
  Image String
  Description String
}

model Categories {
  id String   @id @default(auto()) @map("_id") @db.ObjectId
  category String
  Description String
}
model Inventory {
  id String   @id @default(auto()) @map("_id") @db.ObjectId
  unit String
  shortname String
  baseunit String
  operator String
  operatorvalue String
}
model Warehouses{
  id String   @id @default(auto()) @map("_id") @db.ObjectId
  warehouse String
  phone String
  country String
  city String
  email String
  zipcode String
}
model Variation{
  id String   @id @default(auto()) @map("_id") @db.ObjectId
  name String
  values String[]
}